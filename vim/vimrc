" Vundle required settings
""""""""""""""""""""""""""""""""""""""""
set nocompatible
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
"
" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..

    " Bundles
    """"""""""""""""""
    Bundle 'Townk/vim-autoclose'
    Bundle 'vim-scripts/taglist.vim'
    Bundle 'vim-scripts/TaskList.vim'
    Bundle 'msanders/snipmate.vim'

    " buffer explorer
    Bundle 'fholgado/minibufexpl.vim'

    " Support for xml files
    Bundle 'sukima/xmledit'
    
    " Shows syntax errors on several types of files
    Bundle 'scrooloose/syntastic'

    " File manager
    Bundle 'scrooloose/nerdtree'

    " comments
    Bundle 'scrooloose/nerdcommenter'
    
    " Tab to indent or autocomplete depending on context
    Bundle 'ervandew/supertab'

    " Updated ruby syntax and such
    Bundle 'vim-ruby/vim-ruby'
    
    " Vim Markdown runtime files
    Bundle 'Markdown'
    
    " vim powerline -  The ultimate vim statusline utility
    Bundle 'Lokaltog/vim-powerline'

    " Haskell mode
    " TODO: errors ?
    Bundle 'lukerandall/haskellmode-vim'

    " vimwiki
    Bundle 'vimwiki'

filetype plugin indent on

" General settings
""""""""""""""""""""""""""""
" Set to auto read when a file is changed from the outside
set autoread

set history=200
set number "enable line numbers
set so=7

set wildmenu "Turn on WiLd menu

set ruler "Always show current position

set cmdheight=1 "The commandbar height

set hid "Change buffer - without saving

" Set backspace config
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

set ignorecase "Ignore case when searching
set infercase "make insert-matching preserve the already written characters
set smartcase

set hlsearch "Highlight search things
set incsearch "Make search act like search in modern browsers
set nolazyredraw "Don't redraw while executing macros 

set magic "Set magic on, for regular expressions

set showmatch "Show matching bracets when text indicator is over them
set mat=2 "How many tenths of a second to blink

" No sound on errors
set noerrorbells
set novisualbell
set laststatus=2   " Always show the statusline

let mapleader = ','
let g:mapleader = ','

" Colors and fonts
"""""""""""""""""""""""
syntax on

set background=dark
colorscheme Tomorrow-Night
set gfn=Monospace\ 10
set shell=/bin/bash

if has("gui_running")
    set guioptions-=T
    set guioptions-=L
    set guioptions-=l
    set guioptions-=b
    set guioptions-=m
    set guioptions-=r
    set t_Co=256
    set mouse=a
endif

set encoding=utf8
set ffs=unix

" Backups and undo
"""""""""""""""""""""""""""""
set backup
set wb
set swapfile

" Persistent undo
try
    set undodir=~/.vim_runtime/undodir
    set undofile
catch
endtry

" Indenting
"""""""""""""""""""""
set expandtab
set shiftwidth=4
set tabstop=4
set smarttab
set softtabstop=4

set lbr
set tw=500

set ai "Auto indent
set si "Smart indet
set wrap "Wrap lines

" Key mappings
"""""""""""""""""""""""
" clear highlight
map <silent> <leader><cr> :noh<cr>

" Smart way to move btw. windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Close the current buffer
map <leader>bd :bd<cr>
" Fast save
map <leader>w :wa<cr>
" Fast close
map <leader>q :q<cr>
" Remove  line endings
map <leader>rr :%s///g<cr>

" fast vimrc editing/sourcing
map <leader>ve :edit ~/.vimrc<cr>
map <leader>vs :source ~/.vimrc<cr>

map <silent><F1> :NERDTreeToggle<CR>
map <silent><F2> :TlistToggle<CR>
map <silent><F3> :TaskList<CR>
map <silent><F4> :TMiniBufExplorer<CR>
map <silent><F5> :make<cr>

" window splitting
nmap <leader>s<left>  :topleft  vnew<CR>
nmap <leader>s<right> :botright vnew<CR>
nmap <leader>s<up>    :topleft  new<CR>
nmap <leader>s<down>  :botright new<CR>

" Omnicomplete
"""""""""""""""""""""
set completeopt+=menuone,preview

" Folding
"""""""""""""""""""""
set foldmethod=syntax

nnoremap <silent> <space> @=(foldlevel('.') ? 'za' : "\<Space>")<CR>
nnoremap <silent> <leader>f zA

" Plugins
"""""""""""""""""""""""""""""""
    " NERD tree
    """"""""""""""""""""""""""""""
    let NERDTreeQuitOnOpen=1
    let NERDTreeDirArrows=1

    " taglist
    """"""""""""""""""""""""""""""
    let Tlist_Use_Right_Window = 1
    let Tlist_GainFocus_On_ToggleOpen = 1
    let Tlist_Display_Tag_Scope = 1
    let Tlist_Ctags_Cmd='/usr/bin/ctags'
    
    " minibufexpl plugin
    """"""""""""""""""""""""""""""
    let g:miniBufExplMaxSize = 2
    let g:miniBufExplMapWindowNavVim = 1
    let g:miniBufExplMapWindowNavArrows = 1
    let g:miniBufExplMapCTabSwitchBufs = 1
    let g:miniBufExplShowBufNumbers = 0
    let g:miniBufExplModSelTarget = 1

    autocmd BufRead,BufNew :call UMiniBufExplorer

    " Powerline
    """""""""""""""""""
    let g:Powerline_symbols = 'unicode'
    let g:Powerline_stl_path_style = 'short'

    " Syntastic
    """""""""""""""""""
"    let g:syntastic_check_on_open=1
    let g:syntastic_error_symbol='✗'
    let g:syntastic_warning_symbol='⚠'
    let g:syntastic_auto_loc_list=1

    " supertab
    """""""""""""""""""
    " TODO: working supertab completion
    "let g:SuperTabDefaultCompletionType = "context"

    " vimwiki
    """""""""""""""""""
    let g:vimwiki_list = [{'path': '~/wiki/',
                         \ 'path_html': '~/wiki_html/',
                         \ 'auto_export': 1,
                         \ 'template_path': '~/wiki_html/templates/',
                         \ 'template_default': 'default',
                         \ 'template_ext': '.xml'
                         \},
                         \{'path': '~/testwiki/',
                         \ 'path_html': 'testwiki_html',
                         \ 'auto_export': 1,
                         \ 'syntax': 'markdown',
                         \ 'ext': '.md'
                         \}]
    let g:vimwiki_html_header_numbering = 2
    let g:vimwiki_dir_link = 'index'

" Language-specific options
"""""""""""""""""""""""
    " Haskell
    """"""""""""""""""""""""""
    au BufEnter *.hs compiler ghc

    " Markdown
    """"""""""""""""""""""""""
    au BufRead,BufNewFile {*.md,*.mkd,*.markdown} set ft=markdown

    " Ruby
    """"""""""""""""""""""""""
    au BufRead,BufNewFile {Gemfile,Rakefile,Capfile,*.rake,config.ru} set ft=ruby
    
    " auto-close || pair in ruby files
    au FileType ruby let b:AutoClosePairs = AutoClose#DefaultPairsModified("|", "")

    " correct ruby indent
    au FileType ruby setl sw=2 ts=2 sts=2 

    " C++
    """"""""""""""""""""""""""
    au BufEnter {*.cpp,*.hpp,*.cc,*.hh} set ft=cpp

" Other
"""""""""""""""""""

